# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines below are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need 'go generate'
    - go generate ./...

builds:
  - id: icpctl
    main: cmd/icpctl/main.go
    env:
      - CGO_ENABLED=0
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.CommitDate}}
      - -X main.builtBy=goreleaser"
      - -X github.com/intility/icpctl/internal/build.Version={{.Version}}
      - -X github.com/intility/icpctl/internal/build.Commit={{.ShortCommit}}
      - -X github.com/intility/icpctl/internal/build.CommitDate={{.CommitDate}}
      # telemetry
      - -X github.com/intility/icpctl/internal/build.OTELCollectorEndpoint={{.Env.OTLP_ENDPOINT}}
      - -X github.com/intility/icpctl/internal/build.OTELCollectorToken={{.Env.OTLP_TOKEN}}
      - -X github.com/intility/icpctl/internal/build.SentryDSN={{.Env.SENTRY_DSN}}
      # authentication
      - -X github.com/intility/icpctl/internal/build.AuthPlatformAudience={{.Env.AUTH_AUDIENCE}}
      - -X github.com/intility/icpctl/internal/build.AuthAuthority={{.Env.AUTH_AUTHORITY}}
      - -X github.com/intility/icpctl/internal/build.AuthClientID={{.Env.AUTH_CLIENT_ID}}
      - -X github.com/intility/icpctl/internal/build.AuthRedirectURI={{.Env.AUTH_REDIRECT_URI}}
      # application
      - -X github.com/intility/icpctl/internal/build.PlatformBaseURI={{.Env.PLATFORM_BASE_URI}}
    mod_timestamp: "{{.CommitTimestamp}}"
    flags: "-trimpath"
    binary: icpctl
    goos:
      - linux
      - windows
      - darwin

gitlab_urls:
  api: https://gitlab.intility.com/api/v4/
  download: https://gitlab.intility.com
  use_package_registry: true

release:
  gitlab:
    owner: "developer-infrastructure/platform-2.0/minato"
    name: "icpctl" #icpctl

archives:
  - format: tar.gz
    # use zip for windows archives
    format_overrides:
      - goos: windows
        format: zip
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      icpctl_
      {{- .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    files:
      - LICENSE*
      - README*
      - completions/*

brews:
  - name: icpctl
    repository:
      owner: homebrew
      name: tap
      token: "{{ .Env.GITLAB_TOKEN }}"
    homepage: https://gitlab.intility.com/developer-infrastructure/platform-2.0/minato/icpctl
    description: "A CLI for managing container platform resources."
    goarm: 6
    goamd64: v1
    directory: Formula
    url_template: https://gitlab.intility.com/api/v4/projects/{{ .Env.CI_PROJECT_ID }}/packages/generic/icpctl/{{ trimprefix .Tag "v"}}/{{ .ArtifactName }}
    url_headers:
      - "Authorization: Basic {{ .Env.DOWNLOADER_BASIC_TOKEN }}"
    #url_template: "https://gitlab.intility.com/developer-infrastructure/platform-2.0/minato/icpctl/-/releases/{{ .Tag }}/downloads/{{ .ArtifactName }}"
    install: |
      bin.install "icpctl"
      bash_completion.install "completions/icpctl.bash" => "icpctl"
      zsh_completion.install "completions/icpctl.zsh" => "_icpctl"
      fish_completion.install "completions/icpctl.fish"

changelog:
  sort: asc
  groups:
    - title: "Features"
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 0
    - title: "Bug Fixes"
      regexp: '^.*?fix(es)?(\([[:word:]]+\))??!?:.+$'
      order: 1
    - title: Others
      order: 999
  filters:
    exclude:
      - "^docs"
      - "^test"
      - "^ci"
      - "^chore"
      - "^[Mm]erge.+$"
